name: AWS ECR Workflow

on:
  workflow_call:
    inputs:
      SERVICE_NAME:
        required: true
        type: string
    secrets:
      SLACK_WEBHOOK_URL:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCESS_KEY:
        required: true
  
env:
  AWS_REGION: ap-south-1
  DOCKER_IMAGE_VERSION: ${{ github.run_number }}
  ECR_REGISTRY: 697629728038.dkr.ecr.ap-south-1.amazonaws.com/cssp
  SERVICE_NAME: ${{ inputs.SERVICE_NAME }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Build start notification
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # This data can be any valid JSON from a previous step in the GitHub Action
          payload: |
           {
             "text": "Starting build for the `${{env.SERVICE_NAME}}` with version `${{env.DOCKER_IMAGE_VERSION}}` \n\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
           }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Create docker image
        run: |
          docker build -t cssp:${{ env.DOCKER_IMAGE_VERSION }} .
          docker tag cssp:${{ env.DOCKER_IMAGE_VERSION }} ${{ env.ECR_REGISTRY }}:${{ env.DOCKER_IMAGE_VERSION }}

      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1 
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1 
        with: 
          registry : ${{ env.ECR_REGISTRY }} 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Push Docker image to AWS ECR 
        run: docker push ${{ env.ECR_REGISTRY }}:${{ env.DOCKER_IMAGE_VERSION }}
