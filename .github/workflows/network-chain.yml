name: Cord Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      CHAIN_NAME: 'CSSP'
      SPEC_FOLDER_NAME: 'cssp'
      PROJECT_ID: cssp-dhiway
      REGION: asia-south1
      GAR_LOCATION: gcr.io/cssp-dhiway/cord/validator:latest
      

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set current date time
        id: set_datetime
        run: |
          CURRENT_DATETIME=$(date +'%Y-%d-%m-%H-%M')
          echo "CURRENT_DATETIME=$CURRENT_DATETIME" >> $GITHUB_ENV
        
#      - name: Install dependencies
#        run: |
#          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
#          source ~/.cargo/env
#          rustup default stable
#          rustup update
#          rustup update nightly
#          rustup target add wasm32-unknown-unknown --toolchain nightly
#          sudo apt update
#          sudo apt install -y git clang curl libssl-dev llvm libudev-dev pkg-config
#          sudo apt install --assume-yes build-essential git clang curl libssl-dev llvm libudev-dev make protobuf-compiler

#      - name: Build the binary and create the keys
#        run: |
#          git clone https://github.com/dhiway/cord
#          cd cord
#          cargo build --release
#          SEED_KEY=$(./target/release/cord key generate -n cord --words 24 --scheme Sr25519 | grep "Secret seed" | awk '{print $3}')
#          ./scripts/bootstrap.sh -m 8 -n 8 -a 3 -o scripts -s "$SEED_KEY"
#          sed -i 's/chain_name = "CORD Custom Chain"/chain_name = "'"$CHAIN_NAME"'"/g' ./scripts/config.toml
#          sed -i 's/chain_type = "local"/chain_type = "live"/g' scripts/config.toml
#          ./target/release/cord bootstrap-chain --config ./scripts/config.toml > ./scripts/$SPEC_FOLDER_NAME-spec.json
#          ./target/release/cord build-spec --raw --chain ./scripts/$SPEC_FOLDER_NAME-spec.json > ./scripts/$SPEC_FOLDER_NAME-raw-spec.json
#          cat ./scripts/config.toml
#          ls -la ./scripts/
#          cd ..
          
      - name: Set tag name
        id: set_tag
        run: echo "::set-output name=tag_name::$(echo $SPEC_FOLDER_NAME | tr -cd '[:alnum:]._-' | cut -c 1-128)"

      - name: Access GCP using Service Account
        id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_SA_GKE }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: "Docker auth"
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build image
        run: docker build . --file Dockerfile-validator-1 --tag ${{ env.GAR_LOCATION }}
        working-directory: .

      - name: Push image
        run: |-
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://asia-south1.pkg.dev
          docker push ${{ env.GAR_LOCATION }}
        
#      - name: Build Docker image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: Dockerfile-validator-1
#          push: true
#          tags: gcr.io/cssp-dhiway/cord:validator-1-${{ steps.set_tag.outputs.tag_name }}
#        env:
#          DOCKER_USERNAME: _json_key
#          DOCKER_PASSWORD: ${{ secrets.GCP_SA_GKE }}

#      - name: Check docker image details
#        run: |
#          sudo docker images
          
